<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sciatta.openmall.dao.mapper.ext.ItemCommentMapper">
    <resultMap id="BaseResultMap" type="com.sciatta.openmall.dao.pojo.po.mbg.ItemComment">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="item_id" jdbcType="VARCHAR" property="itemId"/>
        <result column="item_name" jdbcType="VARCHAR" property="itemName"/>
        <result column="item_spec_id" jdbcType="VARCHAR" property="itemSpecId"/>
        <result column="item_spec_name" jdbcType="VARCHAR" property="itemSpecName"/>
        <result column="comment_level" jdbcType="INTEGER" property="commentLevel"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime"/>
    </resultMap>

    <resultMap id="UserItemCommentResultMap" type="com.sciatta.openmall.dao.pojo.po.ext.UserItemComment">
        <result column="commentLevel" jdbcType="INTEGER" property="commentLevel"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="specName" jdbcType="VARCHAR" property="specName"/>
        <result column="createdTime" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="userFace" jdbcType="VARCHAR" property="userFace"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, user_id, item_id, item_name, item_spec_id, item_spec_name, comment_level, content,
        created_time, updated_time
    </sql>

    <select id="selectItemComments" resultMap="UserItemCommentResultMap">
        SELECT
        ic.comment_level as commentLevel,
        ic.content as content,
        ic.item_spec_name as specName,
        ic.created_time as createdTime,
        u.face as userFace,
        u.nickname as nickname
        FROM
        item_comments ic
        LEFT JOIN
        users u ON ic.user_id = u.id
        WHERE ic.item_id = #{itemId,jdbcType=VARCHAR}
        <if test="level != null">
            AND ic.comment_level = #{level,jdbcType=INTEGER}
        </if>
    </select>

    <select id="selectCommentCountsByItemIdAndLevel" resultType="Integer">
        SELECT count(1)
        FROM
        item_comments ic
        WHERE ic.item_id = #{itemId,jdbcType=VARCHAR} AND ic.comment_level = #{level,jdbcType=INTEGER}
    </select>

    <insert id="insertBatch">
        insert into item_comments (id, user_id, item_id,
        item_name, item_spec_id, item_spec_name,
        comment_level, content, created_time,
        updated_time)
        values
        <foreach collection="itemCommentList" item="itemComment" index="index" separator=",">
            (
            #{itemComment.id},
            #{itemComment.userId},
            #{itemComment.itemId},
            #{itemComment.itemName},
            #{itemComment.itemSpecId},
            #{itemComment.itemSpecName},
            #{itemComment.commentLevel},
            #{itemComment.content},
            #{itemComment.createdTime},
            #{itemComment.updatedTime}
            )
        </foreach>
    </insert>
</mapper>